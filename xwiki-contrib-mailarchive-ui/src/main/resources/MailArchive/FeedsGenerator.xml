<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>MailArchive</web>
<name>FeedsGenerator</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>MailArchive.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1353930098000</creationDate>
<date>1354528935000</date>
<contentUpdateDate>1354528935000</contentUpdateDate>
<version>1.1</version>
<title>Feeds Generator</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Imported from XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{info}}
Use this wizard to integrate Mail Archive information into another website or tool (or another xwiki page).
Use the following form to select and combine the filters to apply, choose output format then click on generate button.
{{/info}}

{{velocity wiki="true"}}
## Retrieve configured mailing-lists
#set($xwql = "select list.displayname, list.Tag from Document doc, doc.object(MailArchiveCode.ListsSettingsClass) as list where doc.space='MailArchivePrefs' order by list.displayname asc")
#set($lists = $services.query.xwql($xwql).execute())
##Retrieve configured mail types
#set($xwql = "select type.id, type.name from Document doc, doc.object(MailArchiveCode.TypesSettingsClass) as type")
#set($existingTypes = $services.query.xwql($xwql).execute())

{{html wiki="false"}}
&lt;script type="text/javascript"&gt;
function generate() 
{
  var params = Form.serialize(document.forms.filters);
  params = params.substring(0, params.indexOf('&amp;btnGene'));
  var parameters = Form.serialize(document.forms.filters, true);
  var val = 'unknown';
  var display = 'unknown';
  if (parameters.output=='html') {
    var url = "${xwiki.getDocument('MailArchiveCode.IntegrationService').getExternalURL('view')}?xpage=plain&amp;" + params;
    display = '&lt;!--[if IE]&gt;\n&lt;object classid="clsid:25336920-03F9-11CF-8FD0-00AA00686F13" data="'+url+'" style="width:100%;height:100%;"&gt;&lt;p&gt;backup content&lt;/p&gt;&lt;/object&gt;\n&lt;![endif]--&gt;\n&lt;!--[if !IE]&gt; &lt;--&gt;\n&lt;object type="text/html" data="'+url+'" style="width:100%;height:100%;"&gt;&lt;p&gt;backup content&lt;/p&gt;&lt;/object&gt;\n&lt;!--&gt; &lt;![endif]--&gt;';
    if (parameters.targetedContainer =='xwiki') {
      val = display.escapeHTML();
      val = "&lt;br/&gt;{{html}}&lt;br/&gt;" + val + "&lt;br/&gt;{{/html}}&lt;br/&gt;";
    } else {
      val = display.escapeHTML();
    }
  } else if (parameters.output=='json' || parameters.output=='rss' || parameters.output=='xml') {
    display = "${xwiki.getDocument('MailArchiveCode.IntegrationService').getExternalURL('view')}?xpage=plain&amp;outputSyntax=plain&amp;" + params;
    if (parameters.targetedContainer == "xwiki") {
      val = display.escapeHTML();
      if(parameters.output == "rss") {
        val = '&lt;br/&gt;{{rss feed="' + val + '"/}}';
      } else if (parameters.output == 'xml') {
        val = '&lt;br/&gt;[[Get XML&gt;&gt;' + val + ']]&lt;br/&gt;';
      } else if (parameters.output == 'json') {
        val = '&lt;br/&gt;[[Get JSON&gt;&gt;' + val + ']]&lt;br/&gt;';
      }
    } else {
      val = display.escapeHTML();
    }
    display = "&lt;iframe style='width:100%;' src='" + display + "&amp;inline=true'/&gt;";
  }
  $('generated').update(val);
  $('result').update(display);
//  var url = "${xwiki.getDocument('MailArchiveCode.IntegrationService').getExternalURL('view')}?xpage=plain&amp;outputSyntax=plain"
//  new Ajax.Request(url, {
//    method: 'get',
//    parameters: params,
//    onSuccess: function(transport) {
//      $('result').update(transport.responseText);
//    }
//  });
};
&lt;/script&gt;

{{/html}}

{{container layoutStyle="columns"}}
(((
{{html wiki="true"}}

== Filters ==

&lt;form class="xform" method="post" name="filters"&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;&lt;input type="checkbox" name="criteria" value="criteria_community"/&gt; Mailing-list&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
      #foreach($list in $lists)
      &lt;input type="checkbox" name="community" value="${list[1]}"/&gt;${list[0]}
      #end
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;Item type&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    &lt;select name="itemType"&gt;
      &lt;option value="topic"/&gt;Topic
      &lt;option value="mail"/&gt;Mail
    &lt;/select&gt;
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;&lt;input type="checkbox" name="criteria" value="criteria_type"/&gt; Type&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    #foreach($type in $existingTypes)
    &lt;input type="checkbox" name="type" value="${type[0]}"/&gt;${type[1]}
    #end
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;Ratings&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    &lt;input type="checkbox" name="ratings" value="ratings"/&gt;List best rated items first
  &lt;/dd&gt;
&lt;/ul&gt;
= Ouput Options =
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;Maximum number of items to include&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    &lt;input type="text" name="maxnb" value="10"/&gt;
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;Generated output&lt;/label&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    &lt;select name="output"&gt;
      &lt;option value="html"&gt;HTML&lt;/option&gt;
      &lt;option value="rss"&gt;RSS&lt;/option&gt;
      &lt;option value="xml"&gt;XML&lt;/option&gt;
      &lt;option value="json"&gt;JSON&lt;/option&gt;
    &lt;/select&gt;
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;ul&gt;
  &lt;dt&gt;
    &lt;label&gt;Targeted container&lt;/label&gt;
    &lt;span class="xHint"&gt;Where do you want to integrate this content ?&lt;/span&gt;
  &lt;/dt&gt;
  &lt;dd&gt;
    &lt;select name="targetedContainer"&gt;
      &lt;option value="html"&gt;HTML page / others&lt;/option&gt;
      &lt;option value="xwiki"&gt;XWiki&lt;/option&gt;
    &lt;/select&gt;
  &lt;/dd&gt;
&lt;/ul&gt;
&lt;span class="buttonWrapper"&gt;
  &lt;input type="button" class="button" name="btnGenerate" value="Generate !" onclick="javascript:generate(); return false;"/&gt;
&lt;/span&gt;
&lt;/form&gt;

{{/html}}

)))

(((

{{html wiki="true"}}

== Copy/paste this ... ==
&lt;div id="generated" style="border:1px solid black; width:98%; height:200px; overflow:auto;"&gt;
&lt;/div&gt;

== ... to obtain this ==
&lt;div id="result" style="border:1px solid black; width:98%; height:300px; overflow:auto;"&gt;
&lt;/div&gt;

{{/html}}

)))

{{/container}}

{{/velocity}}</content></xwikidoc>
