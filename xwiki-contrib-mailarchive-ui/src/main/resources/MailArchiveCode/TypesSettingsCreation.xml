<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>MailArchiveCode</web>
<name>TypesSettingsCreation</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1331212619000</creationDate>
<date>1338718996000</date>
<contentUpdateDate>1338718996000</contentUpdateDate>
<version>2.4</version>
<title>Mail Types Creation</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>MailArchiveCode.TypesSettingsClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<displayName>
<customDisplay></customDisplay>
<disabled>0</disabled>
<name>displayName</name>
<number>1</number>
<picker>0</picker>
<prettyName>Display Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</displayName>
<icon>
<customDisplay></customDisplay>
<disabled>0</disabled>
<name>icon</name>
<number>4</number>
<picker>0</picker>
<prettyName>Icon</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</icon>
<name>
<customDisplay></customDisplay>
<disabled>0</disabled>
<name>name</name>
<number>4</number>
<picker>0</picker>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<patternList>
<customDisplay></customDisplay>
<disabled>0</disabled>
<editor>PureText</editor>
<name>patternList</name>
<number>3</number>
<picker>0</picker>
<prettyName>Patterns List</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</patternList>
</class>
<name>MailArchiveCode.TypesSettingsCreation</name>
<number>0</number>
<className>MailArchiveCode.TypesSettingsClass</className>
<guid>8e484243-88d6-4fce-bcc2-4321bf006871</guid>
<property>
<displayName></displayName>
</property>
<property>
<icon></icon>
</property>
</object>
<object>
<class>
<name>XWiki.DocumentSheetBinding</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<sheet>
<customDisplay></customDisplay>
<disabled>0</disabled>
<name>sheet</name>
<number>1</number>
<picker>0</picker>
<prettyName>Sheet</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</sheet>
</class>
<name>MailArchiveCode.TypesSettingsCreation</name>
<number>0</number>
<className>XWiki.DocumentSheetBinding</className>
<guid>dc3d4c73-78bd-4e38-8e6f-77341acb1f78</guid>
<property>
<sheet></sheet>
</property>
</object>
<content>{{velocity}}
#if($request.get('save'))
  #set($name = $request.get('MailArchiveCode.TypesSettingsClass_0_name'))
  #set($newtypedoc = $xwiki.getDocument("MailArchivePrefs.Type_${name}"))
  $newtypedoc.setParent('MailArchive.Admin')
  #set ($newtypeobj = $newtypedoc.addObjectFromRequest('MailArchiveCode.TypesSettingsClass'))
  #set($ok = $newtypedoc.save())
  $response.setContentType('text/xml')
  #if($ok)
    &lt;response&gt;
      &lt;status&gt;ok&lt;/status&gt;
      &lt;message&gt;Successfully created new type ${newtypeobj.get('name')}&lt;/message&gt;
    &lt;/response&gt;
  #else    
    &lt;response&gt;
      &lt;status&gt;ko&lt;/status&gt;
      &lt;message&gt;Could not create new type ${newtypeobj.get('name')}&lt;/message&gt;
    &lt;/response&gt;
  #end
#else
  #set($obj=$doc.getObject('MailArchiveCode.TypesSettingsClass'))
  #if($request.getParameter('newtypename'))
    #set($discard = $obj.set('name', $request.getParameter('newtypename')))
  #end
  #if($request.get('xpage'))
    #set($assumeLightbox = true)
  #end
  #set($typesClass=$doc.getObject('MailArchiveCode.TypesSettingsClass').xWikiClass)

== New Mail Type Information ==

{{html wiki="true"}}
&lt;form action="" class="xform" method="post" name="form_types_settings" onsubmit="return validate(this, 'table-patterns-list');"&gt;
  &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
   #set($prop = $typesClass.get('name'))
   &lt;dl&gt;
     &lt;dt&gt;
       &lt;label for="MailArchiveCode.TypesSettingsClass_0_${prop.getName()}"&gt;$prop.prettyName&lt;/label&gt;
     &lt;/dt&gt;
     &lt;dd&gt;
       $doc.display($prop.getName(), 'edit', $obj)
     &lt;/dd&gt;
   &lt;/dl&gt;
   #set($prop = $typesClass.get('displayName'))
   &lt;dl&gt;
     &lt;dt&gt;
       &lt;label for="MailArchiveCode.TypesSettingsClass_0_${prop.getName()}"&gt;$prop.prettyName&lt;/label&gt;
     &lt;/dt&gt;
     &lt;dd&gt;
       $doc.display($prop.getName(), 'edit', $obj)
     &lt;/dd&gt;
   &lt;/dl&gt;
   #set($prop = $typesClass.get('icon'))
   &lt;dl&gt;
     &lt;dt&gt;
       &lt;label for="MailArchiveCode.TypesSettingsClass_0_${prop.getName()}"&gt;$prop.prettyName&lt;/label&gt;
       &lt;span class="xHint"&gt;Enter the name of an icon from [[XWiki Icon Set&gt;&gt;http://www.famfamfam.com/lab/icons/silk/previews/index_abc.png||rel="_blank"]]&lt;/span&gt;
     &lt;/dt&gt;
     &lt;dd&gt;
       $doc.display($prop.getName(), 'edit', $obj)
     &lt;/dd&gt;
   &lt;/dl&gt;
  &lt;br/&gt;
=== Patterns List ===
  &lt;table id="table-patterns-list"&gt;
    &lt;tr&gt;
      &lt;th&gt;&amp;nbsp;&lt;/th&gt;
      &lt;th&gt;Matched Field(s)&lt;/th&gt;
      &lt;th&gt;Pattern (regular expression)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;input type="checkbox" id="chk"/&gt;&lt;/td&gt;
      &lt;td&gt;
        &lt;input id="fields-from" name="fields-from" value="from" type="checkbox"&gt;From&lt;input id="fields-to" name="fields-to" value="to" type="checkbox"&gt;To&lt;input id="fields-cc" name="fields-cc" value="cc" type="checkbox"&gt;Cc&lt;input id="fields-subject" name="fields-subject" value="messagesubject" type="checkbox"&gt;Subject&lt;input id="fields-body" name="fields-body" value="body" type="checkbox"&gt;Body Text
      &lt;/td&gt;
      &lt;td&gt;
        &lt;input id="pattern" name="pattern" size="50" value="" type="text"&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  &lt;br/&gt;
  &lt;span class="buttonwrapper"&gt;
    &lt;a class="button" href="#" onclick="javascript:addPatternRow('table-patterns-list');"&gt;Add matching pattern&lt;/a&gt;
    &lt;a class="button" href="#" onclick="javascript:deletePatternRow('table-patterns-list');"&gt;Remove selected pattern(s)&lt;/a&gt;
  &lt;/span&gt;
  &lt;input type="hidden" id="MailArchiveCode.TypesSettingsClass_0_patternList" name="MailArchiveCode.TypesSettingsClass_0_patternList" value=""/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;

  &lt;span class="buttonwrapper"&gt;
    #if($assumeLightbox)
      ## LightBox detected...
      &lt;script type="text/javascript"&gt;
        ## Make the X button not reload the page. (overriding LbClose)
        window.lb.lbClose = function() {
          this.lbHide();
          this.lbClearData();
          if(this.redirectUrl!==undefined){window.location=this.redirectUrl;}
        }
        ## Post the form entry to the page and load the result. (we override lbSaveForm)
        window.lb.lbSaveForm = function() {
          validate(this.form, 'table-patterns-list');
          var formParams = Form.serialize(this.form);
          Form.disable(this.form);
          var ajaxRequest = new Ajax.Request(this.saveUrl, {
            parameters: formParams,
            asynchronous: false
          });
          var status = ajaxRequest.transport.responseXML.getElementsByTagName('status')[0].childNodes[0].nodeValue;
          var message = ajaxRequest.transport.responseXML.getElementsByTagName('message')[0].childNodes[0].nodeValue;
          this.redirectUrl = this.redirectUrl + '?status=' + status + '&amp;message=' + message + '&amp;tab=types';
          window.lb.lbFormDataLoaded(ajaxRequest.transport);
          window.lb.lbClose();
        }
      &lt;/script&gt;
      &lt;input class="button" type="submit" value="$msg.get('save')" onclick="window.lb.lbSaveForm();"/&gt;
      &lt;/span&gt;&lt;span class="buttonwrapper"&gt;
      &lt;input class="button secondary" type="submit" value="$msg.get("cancel")" onclick="Form.disable(window.lb.form); window.lb.lbClose();"/&gt;
    #else
      ## Not using the LightBox
      &lt;input type="submit" value="$msg.get('save')" class="button"/&gt;
    #end
  &lt;/span&gt;## ButtonWrapper
&lt;/form&gt;
&lt;script type="text/javascript"&gt;
var patternsList = new Array();
var addPattern = function() {
  var from = document.getElementById('fields-from').checked;  
  var to = document.getElementById('fields-to').checked;  
  var cc = document.getElementById('fields-cc').checked;  
  var subject = document.getElementById('fields-subject').checked;  
  var body = document.getElementById('fields-body').checked;  
  var pattern = document.getElementById('pattern').value;
  var patternItem = [from,to,cc,subject,body,pattern];
  patternsList.push(patternItem);

  document.getElementById('MailArchiveCode.TypesSettingsClass_0_patternList').value = patternsList;
}
function addPatternRow(tableID) {
 var table = document.getElementById(tableID); 
 var rowCount = table.rows.length;
 var row = table.insertRow(rowCount);
 
 var colCount = table.rows[0].cells.length;
 
 for(var i=0; i&lt;colCount; i++) {
 
   var newcell = row.insertCell(i);
 
   newcell.innerHTML = table.rows[1].cells[i].innerHTML;

   switch(newcell.childNodes[0].type) {
     case "text":
       newcell.childNodes[0].value = "";
       break;
     case "checkbox":
       newcell.childNodes[0].checked = false;
       break;
     case "select-one":
       newcell.childNodes[0].selectedIndex = 0;
       break;
   }
 }
}

function deletePatternRow(tableID) {
  try {
    var table = document.getElementById(tableID);
    var rowCount = table.rows.length;
 
    for(var i=0; i&lt;rowCount; i++) {
      var row = table.rows[i];
      var chkbox = row.cells[0].childNodes[0];
      if(null != chkbox &amp;&amp; true == chkbox.checked) {
        if(rowCount &lt;= 1) {
          alert("Cannot delete all the rows.");
          break;
        }
        table.deleteRow(i);
        rowCount = rowCount - 1;
        i = i - 1;
      }
 
    }
  }catch(e) {
    alert(e);
  }
}

function validate(form, tableID) {
  var table = document.getElementById(tableID); 
  var rowCount = table.rows.length;
  var list = '';

  for (var i=1; i&lt;rowCount; i++) {
    var row = table.rows[i];
    var chkbox = row.cells[0].childNodes[0];
    var from = row.cells[1].childNodes[1].checked;
    var to = row.cells[1].childNodes[3].checked;
    var cc = row.cells[1].childNodes[5].checked;
    var subject = row.cells[1].childNodes[7].checked;
    var body = row.cells[1].childNodes[9].checked;
    var pattern = row.cells[2].childNodes[1].value;
    if (pattern.trim() == '') {
      alert('Please specify a pattern.');
      return false;
    }
    if (!from &amp;&amp; !to &amp;&amp; !cc &amp;&amp; !subject &amp;&amp; !body) {
      alert('Please choose at least one field to match.');
      return false;
    }
    if (from) { list = list + 'from'; }
    if (from &amp;&amp; to) { list = list + ',';}
    if (to) { list = list + 'to'; }
    if ((from||to) &amp;&amp; cc) { list = list + ',';}
    if (cc) { list = list + 'cc'; }
    if ((from||to||cc) &amp;&amp; subject) { list = list + ',';}
    if (subject) { list = list + 'subject'; }
    if ((from||to||cc||subject) &amp;&amp; body) { list = list + ',';}
    if (body) { list = list + 'body'; }
    list = list + '\n' + pattern + '\n';  
  }
  document.getElementById('MailArchiveCode.TypesSettingsClass_0_patternList').value = list;

  return true;

}

&lt;/script&gt;

{{/html}}

#end

{{/velocity}}</content></xwikidoc>
